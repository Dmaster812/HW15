{\rtf1\ansi\ansicpg1252\cocoartf2639
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fmodern\fcharset0 Courier;\f1\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
\paperw11900\paperh16840\margl1440\margr1440\vieww28300\viewh15000\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs26 \cf0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 1.	Write function arrayCopy that gets the following parameters : function arrayCopy(src,srcPos,dst,dstPos,length) \{....\} \
where: src - source array, srcPos - index of the source array, dst - array destination, dstPos - index of destination array, \
length - number of elements. This function should copy length elements from src array beginning from srcPos index to dst array from dstPos index \
 \
Apply the following array functions (splice and slice) \
\pard\pardeftab720\partightenfactor0
\cf0 \outl0\strokewidth0 \
2.	Write function count that returns how many times a given element encountered in a given array. Example of input array \
   Const strings=["abc","lmn","cd","abc","abc"] \
Output for the above example count(strings,"abc") will be 3 and count(strings,"ab") will be 0.\
Apply the array function reduce.\
\outl0\strokewidth0 \strokec2 \
\pard\pardeftab720\partightenfactor0
\cf0 3.	 Write function displayOccurrences(array).\
Array contains the repeated strings, for example [\'91abc\'92, \'91lmn\'92, \'91abc\'92, \'91lmn\'92,\'92lmn\'92, \'91prst\'92, \'91ab\'92] \
The function should display out the words and how many times each word is encountered in the array in the format as shown below. The words order isn\'92t defined. For example:\
       abc -> 2\
       lmn -> 3\
      prst ->1\
      ab ->1\
\
4.	Write function ulSurround that surrounds array of strings inside <ul></ul> element. Example of input array \
	const strings=["abc","lmn","cd"] \
     Output array for the above example- const ulSurrounding=ulSurround(strings) \
          ["<ul>","<li>abc</li>","<li>lmn</li>","<li>cd</li>","</ul>"] \
 Apply the array functions: splice and map    \
  \outl0\strokewidth0 \
\pard\pardeftab720\partightenfactor0
\cf0 5. Write a method that will sort an array of strings in order of string length from shortest to longest\
\

\f1 \uc0\u1047 \u1072 \u1076 \u1072 \u1085 \u1080 \u1103 
\f0  
\f1 \uc0\u1085 \u1072 
\f0  
\f1 \uc0\u1089 \u1072 \u1084 \u1086 \u1089 \u1090 \u1086 \u1103 \u1090 \u1077 \u1083 \u1100 \u1085 \u1086 \u1077 
\f0  
\f1 \uc0\u1080 \u1079 \u1091 \u1095 \u1077 \u1085 \u1080 \u1077 
\f0 . 
\f1 \uc0\u1053 \u1077 \u1086 \u1073 \u1103 \u1079 \u1072 \u1090 \u1077 \u1083 \u1100 \u1085 \u1099 \u1077 
\f0  
\f1 \uc0\u1079 \u1072 \u1076 \u1072 \u1085 \u1080 \u1103 
\f0  
\f1 \uc0\u1089 \u1086 
\f0  
\f1 \uc0\u1079 \u1074 \u1077 \u1079 \u1076 \u1086 \u1095 \u1082 \u1086 \u1081 
\f0 \outl0\strokewidth0 \strokec2 \
\pard\pardeftab720\partightenfactor0
\cf0  \
}